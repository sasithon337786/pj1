import 'package:http/http.dart' as http;
import 'dart:convert';
import 'dart:io'; // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö File

class ApiService {
  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô IP ‡∏ó‡∏µ‡πà backend ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà
  // ‡∏ñ‡πâ‡∏≤ backend ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏π‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢ ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ baseUrl ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞ backend ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå
  final String baseUrl = 'http://10.160.17.225:3000';

  Future<void> checkStatus() async {
    try {
      final response = await http.get(Uri.parse('$baseUrl/health'));

      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        print('üåê Server says: ${data['message']}');
      } else {
        throw Exception('Server responded with status: ${response.statusCode}');
      }
    } catch (e) {
      print('‚ö†Ô∏è Error checking status: $e');
      // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÇ‡∏¢‡∏ô Exception ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
    }
  }

  Future<bool> loginUser(String email, String password) async {
    try {
      final response = await http.post(
        Uri.parse('$baseUrl/api/auth/login'),
        headers: {'Content-Type': 'application/json'},
        body: jsonEncode({'username': email, 'password': password}),
      );

      if (response.statusCode == 200) {
        print('‚úÖ Login success: ${response.body}');
        return true;
      } else {
        print('‚ùå Login failed: ${response.body}');
        return false;
      }
    } catch (e) {
      print('‚ö†Ô∏è Error during login: $e');
      return false;
    }
  }

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ---
  Future<bool> addCategory(File imageFile, String categoryName) async {
    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!await imageFile.exists()) {
        print('‚ùå Error: Image file does not exist at path: ${imageFile.path}');
        return false;
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Multipart request ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå
      var request = http.MultipartRequest(
        'POST',
        Uri.parse(
            '$baseUrl/api/categories'), // **‡∏´‡∏ô‡∏π‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô endpoint ‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà backend ‡∏Å‡∏≥‡∏´‡∏ô‡∏î**
      );

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô field
      request.fields['name'] =
          categoryName; // **‡∏´‡∏ô‡∏π‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ field 'name' ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà backend ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á**

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå
      request.files.add(await http.MultipartFile.fromPath(
        'categoryImage', // **‡∏´‡∏ô‡∏π‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ field 'categoryImage' ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà backend ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á**
        imageFile.path,
      ));

      // ‡∏™‡πà‡∏á request
      var response = await request.send();

      // ‡∏≠‡πà‡∏≤‡∏ô response
      var responseBody = await response.stream.bytesToString();

      if (response.statusCode == 201 || response.statusCode == 200) {
        print('‚úÖ Category added successfully: $responseBody');
        return true;
      } else {
        print(
            '‚ùå Failed to add category. Status code: ${response.statusCode}, Body: $responseBody');
        return false;
      }
    } catch (e) {
      print('‚ö†Ô∏è Error adding category: $e');
      return false;
    }
  }
}
